import type { NextConfig } from "next";
const isAzurite = process.env.AZURE_STORAGE_CONNECTION_STRING?.includes('devstoreaccount1') ?? false;

// Minimal, safe-ish Content-Security-Policy. Tweak as needed for external vendors (analytics, fonts, etc.).
const csp = [
  "default-src 'self'",
  "img-src 'self' data: blob: https:",
  "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com",
  "font-src 'self' https://fonts.gstatic.com data:",
  "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com",
].join('; ');

const nextConfig: NextConfig = {
  reactStrictMode: true,
  output: "standalone",
  // Remove the X-Powered-By header generated by Next.js
  // (if your Next.js version supports it). We also add global security headers via `headers()`.
  poweredByHeader: false,
  images: {
    unoptimized: isAzurite,
    remotePatterns: [
      // Azurite / local dev
      { protocol: "http", hostname: "localhost",  port: "10000", pathname: "/devstoreaccount1/photos/**" },
      // Azure Blob (production)
      { protocol: "https", hostname: "momentia1.blob.core.windows.net", pathname: "/photos/**" },
      { protocol: "https", hostname: "momentiastorage.blob.core.windows.net", pathname: "/photos/**" },
    ],
  },
  // ← experimental.serverComponentsExternalPackages は使わない
  serverExternalPackages: ["@azure/identity", "@azure/storage-blob", "@prisma/client", "prisma"],

  // Global HTTP headers applied to all routes. Adjust CSP and other values for third-party needs.
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          // HSTS: enable for production (preload option only after you registered at hstspreload.org)
          { key: 'Strict-Transport-Security', value: 'max-age=63072000; includeSubDomains; preload' },
          // Prevent MIME sniffing
          { key: 'X-Content-Type-Options', value: 'nosniff' },
          // Clickjacking protection
          { key: 'X-Frame-Options', value: 'SAMEORIGIN' },
          // Reasonable Referrer-Policy
          { key: 'Referrer-Policy', value: 'strict-origin-when-cross-origin' },
          // Permissions policy (formerly Feature-Policy) — tighten down common features
          { key: 'Permissions-Policy', value: 'camera=(), microphone=(), geolocation=(), interest-cohort=()' },
          // Disable legacy XSS filter (modern browsers ignore it; 0 avoids inconsistent behavior)
          { key: 'X-XSS-Protection', value: '0' },
          // Content-Security-Policy — tune for your external assets; this is intentionally conservative
          { key: 'Content-Security-Policy', value: csp },
        ],
      },
    ];
  },
};

export default nextConfig;